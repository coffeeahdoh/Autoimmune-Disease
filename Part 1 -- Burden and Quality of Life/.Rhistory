getwd()
AIdata_raw <- read_xlsx("2_Data_AI-patients.xlsx", sheet = 1)
AIdata_raw <- read_xlsx("2_Data_AI-patients.xlsx", sheet = 1)
head(AIdata_raw)
str(AIdata_raw)
summary(AIdata_raw)
AIdata_raw <- read_xlsx("2_Data_AI-patients.xlsx", sheet = 1)
head(AIdata_raw)
str(AIdata_raw)
summary(AIdata_raw)
AIdata_raw <- read_xlsx("2_Data_AI-patients.xlsx", sheet = 1)
head(AIdata_raw)
str(AIdata_raw)
summary(AIdata_raw)
AIdata_clean <- AIdata_raw %>%
mutate(Recruitment = as.factor(Recruitment),
Gender = as.factor(ifelse(Gender == 2, 0, 1)),
Education = as.factor(Education),
`Marital status` = as.factor(`Marital status`)) %>%
na_if(-9)
summary(AIdata_clean)
summary(AIdata_clean)
plot_histogram(Age) +
labs(title = "Age Distribution", x = "Age", y = "Count") +
facet_wrap(~Gender)
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75)
}
#function to generate bar plot
plot_bar <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean, ) +
geom_bar(aes({{column}}, fill = {{fill}}),
position = position,
alpha = 0.75)
}
plot_histogram(Age) +
labs(title = "Age Distribution", x = "Age", y = "Count") +
facet_wrap(~Gender)
plot_histogram(Age)
plot_histogram(Age) +
labs(title = "Overall Age Distribution", x = "Age", y = "Count")
plot_histogram(Age) +
geom_bar(color = "red") +
labs(title = "Overall Age Distribution", x = "Age", y = "Count")
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75) +
theme_bw()
}
plot_histogram(Age) +
labs(title = "Overall Age Distribution", x = "Age", y = "Count")
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75) +
theme_classic()
}
plot_histogram(Age) +
labs(title = "Overall Age Distribution", x = "Age", y = "Count")
AIdata_clean <- AIdata_raw %>%
mutate(Gender = as.factor(ifelse(Gender == 2, 0, 1), levels = c("Male", "Female")), #change to standard coding (M = 0, F = 1)
Recruitment = as.factor(Recruitment), #change to categorical
Education = as.factor(Education), #change to categorical
`Marital status` = as.factor(`Marital status`)) %>% #change to categorical
na_if(-9) #replace -9 w/ NA
AIdata_clean <- AIdata_raw %>%
mutate(Gender = factor(ifelse(Gender == 2, 0, 1), levels = c("Male", "Female")), #change to standard coding (M = 0, F = 1)
Recruitment = as.factor(Recruitment), #change to categorical
Education = as.factor(Education), #change to categorical
`Marital status` = as.factor(`Marital status`)) %>% #change to categorical
na_if(-9) #replace -9 w/ NA
summary(AIdata_clean)
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75,
color = ) +
theme_classic()
}
#function to generate bar plot
plot_bar <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean, ) +
geom_bar(aes({{column}}, fill = {{fill}}),
position = position,
alpha = 0.75)
}
plot_histogram(Age) +
labs(title = "Overall Age Distribution", x = "Age", y = "Count")
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75,
color = "Red") +
theme_classic()
}
#function to generate bar plot
plot_bar <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean, ) +
geom_bar(aes({{column}}, fill = {{fill}}),
position = position,
alpha = 0.75)
}
plot_histogram(Age) +
labs(title = "Overall Age Distribution", x = "Age", y = "Count")
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75,
color = "Black",
fill = "Red") +
theme_classic()
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75,
color = "Black",
fill = "Red") +
theme_classic()
}
plot_histogram(Age) +
labs(title = "Overall Age Distribution", x = "Age", y = "Count")
plot_histogram(Age) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_histogram(Age) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75) +
theme_classic()
}
plot_histogram(Age) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
AIdata_clean <- AIdata_raw %>%
mutate(Gender = factor(ifelse(Gender == 2, 0, 1), levels = c("Male", "Female")), #change to standard coding (M = 0, F = 1)
Recruitment = as.factor(Recruitment), #change to categorical
Education = as.factor(Education), #change to categorical
`Marital status` = as.factor(`Marital status`)) %>% #change to categorical
na_if(-9) #replace -9 w/ NA
plot_histogram(Age) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
summary(AIdata_clean$Gender)
AIdata_clean <- AIdata_raw %>%
mutate(Gender = as.factor(ifelse(Gender == 2, 0, 1)), #change to standard coding (M = 0, F = 1)
Recruitment = as.factor(Recruitment), #change to categorical
Education = as.factor(Education), #change to categorical
`Marital status` = as.factor(`Marital status`)) %>% #change to categorical
na_if(-9) #replace -9 w/ NA
summary(AIdata_clean$Gender)
AIdata_clean <- AIdata_raw %>%
mutate(Gender = as.factor(ifelse(Gender == 2, 0, 1)), #change to standard coding (M = 0, F = 1)
Recruitment = as.factor(Recruitment), #change to categorical
Education = as.factor(Education), #change to categorical
`Marital status` = as.factor(`Marital status`)) %>% #change to categorical
mutate(Gender = factor(Gender, levels = c("Male, Female"))) %>%
na_if(-9) #replace -9 w/ NA
summary(AIdata_clean$Gender)
AIdata_clean <- AIdata_raw %>%
mutate(Gender = as.factor(ifelse(Gender == 2, 0, 1)), #change to standard coding (M = 0, F = 1)
Recruitment = as.factor(Recruitment), #change to categorical
Education = as.factor(Education), #change to categorical
`Marital status` = as.factor(`Marital status`)) %>% #change to categorical
mutate(Gender = factor(Gender, levels = c("Male", "Female"))) %>%
na_if(-9) #replace -9 w/ NA
summary(AIdata_clean$Gender)
AIdata_clean <- AIdata_raw %>%
mutate(Gender = as.factor(ifelse(Gender == 2, 0, 1)), #change to standard coding (M = 0, F = 1)
Recruitment = as.factor(Recruitment), #change to categorical
Education = as.factor(Education), #change to categorical
`Marital status` = as.factor(`Marital status`)) %>% #change to categorical
#mutate(Gender = factor(Gender, levels = c("Male", "Female"))) %>%
na_if(-9) #replace -9 w/ NA
summary(AIdata_clean$Gender)
AIdata_clean <- AIdata_raw %>%
mutate(Gender = as.factor(ifelse(Gender == 2, 0, 1)), #change to standard coding (M = 0, F = 1)
Recruitment = as.factor(Recruitment), #change to categorical
Education = as.factor(Education), #change to categorical
`Marital status` = as.factor(`Marital status`)) %>% #change to categorical
mutate(Gender = factor(Gender, labels = c("Male", "Female"))) %>%
na_if(-9) #replace -9 w/ NA
summary(AIdata_clean$Gender)
plot_histogram(Age) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75)
}
#function to generate bar plot
plot_bar <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean, ) +
geom_bar(aes({{column}}, fill = {{fill}}),
position = position,
alpha = 0.75)
}
plot_histogram(Age) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_bar(`AI (number)`) +
facet_wrap(~Gender)
plot_histogram(Age) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_bar(`AI (number)`) +
facet_wrap(~Gender)
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_histogram(`Burden of Symptoms`, Gender)
plot_histogram(`Burden of symptoms`, Gender)
plot_histogram(`Burden of symptoms`, Gender) +
facet_wrap(~Gender)
plot_bar(`Burden of symptoms`, Gender) +
facet_wrap(~Gender)
plot_histogram(`Burden of symptoms`, Gender) +
facet_wrap(~Gender)
ggplot(AIdata_raw, aes(x = as.factor(Gender), y = `Burden of symptoms`, fill=as.factor(Gender))) +
geom_boxplot(alpha = 0.5)
plot_histogram(`Burden of therapies`, Gender, "dodge")
plot_histogram(`EQ-Index score`, Gender)
plot_histogram(`EQ-VAS score`, Gender)
ggplot(AIdata_clean, aes(x = as.factor(Gender), y = `Burden of symptoms`, fill=as.factor(Gender))) +
geom_boxplot(alpha = 0.5)
plot_histogram(`Burden of therapies`, Gender, "dodge")
plot_histogram(`EQ-Index score`, Gender)
plot_histogram(`EQ-VAS score`, Gender)
ggplot(AIdata_clean, aes(x = as.factor(Gender), y = `Burden of symptoms`, fill=as.factor(Gender))) +
geom_violin(alpha = 0.5)
ggplot(AIdata_clean, aes(x = Gender, y = `Burden of symptoms`, fill=as.factor(Gender))) +
geom_violin(alpha = 0.5)
ggplot(AIdata_clean, aes(x = Gender, y = `Burden of symptoms`, fill=Gender)) +
geom_violin(alpha = 0.5)
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_bar(`AI (number)`) +
facet_wrap(~Gender)
plot_histogram(`Burden of symptoms`, Gender) +
facet_wrap(~Gender)
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_bar(`AI (number)`) +
facet_wrap(~Gender)
plot_histogram(`Burden of symptoms`, Gender) +
facet_wrap(~Gender)
ggplot(AIdata_clean, aes(x = Gender, y = `Burden of symptoms`, fill=Gender)) +
geom_violin(alpha = 0.5)
plot_histogram(`Burden of therapies`, Gender, "dodge")
plot_histogram(`EQ-Index score`, Gender)
plot_histogram(`EQ-VAS score`, Gender)
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_bar(`AI (number)`, Gender) +
facet_wrap(~Gender)
plot_histogram(`Burden of symptoms`, Gender) +
facet_wrap(~Gender)
ggplot(AIdata_clean, aes(x = Gender, y = `Burden of symptoms`, fill=Gender)) +
geom_violin(alpha = 0.5)
plot_histogram(`Burden of therapies`, Gender, "dodge")
plot_histogram(`EQ-Index score`, Gender)
plot_histogram(`EQ-VAS score`, Gender)
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_bar(`AI (number)`, Gender) +
facet_wrap(~Gender)
plot_histogram(`Burden of symptoms`, Gender) +
facet_wrap(~Gender)
ggplot(AIdata_clean, aes(x = Gender, y = `Burden of symptoms`, fill=Gender)) +
geom_violin(alpha = 0.5)
plot_histogram(`Burden of therapies`, Gender, "dodge") +
facet_wrap(~Gender)
plot_histogram(`EQ-Index score`, Gender) +
facet_wrap(~Gender)
plot_histogram(`EQ-VAS score`, Gender) +
facet_wrap(~Gender)
knitr::opts_chunk$set(include = TRUE, echo = FALSE, warning = FALSE, message = FALSE)
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_bar(`AI (number)`, Gender) +
facet_wrap(~Gender)
plot_histogram(`Burden of symptoms`, Gender) +
facet_wrap(~Gender)
ggplot(AIdata_clean, aes(x = Gender, y = `Burden of symptoms`, fill=Gender)) +
geom_boxplot(alpha = 0.5)
plot_histogram(`Burden of therapies`, Gender, "dodge") +
facet_wrap(~Gender)
plot_histogram(`EQ-Index score`, Gender) +
facet_wrap(~Gender)
plot_histogram(`EQ-VAS score`, Gender) +
facet_wrap(~Gender)
plot_histogram(Age, Gender) +
facet_wrap(~Gender, color = c("Green", "Purple")) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
geom_bar(color = c("Green", "Purple")) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
scale_fill_continuous(color = c("Green", "Purple")) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
scale_fill_continuous(c("Green", "Purple")) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
scale_color_viridis_b() +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
scale_color_viridis_b(option = "D") +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75) +
scale_color_viridis_b(option = "D")
}
#function to generate bar plot
plot_bar <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean, ) +
geom_bar(aes({{column}}, fill = {{fill}}),
position = position,
alpha = 0.75)
}
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75) +
scale_color_viridis_b(option = "B")
}
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75) +
scale_fill_manual(values = c("000000", "FFFFFF"))
}
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75) +
scale_fill_manual(values = c("001100", "110000"))
}
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75) +
scale_fill_manual(values = c("001100", "FF0000", "000011"))
}
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75) +
scale_fill_manual(values = c("001100", "110000", "000011"))
}
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75) +
scale_fill_manual(values = c("000011", "110000", "000011"))
}
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count")
scale_fill_manual(values = c("000011", "110000", "000011"))
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count") +
scale_fill_manual(values = c("000011", "110000", "000011"))
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count") +
scale_fill_manual(values = c("000011", "001100", "000011"))
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count") +
scale_fill_manual(values = c("110011", "001100", "000011"))
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count") +
scale_fill_manual(values = c("670011", "001100", "000011"))
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count") +
scale_fill_manual(values = c("#670011", "#001100", "#000011"))
#function to generate histogram
plot_histogram <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean) +
geom_histogram(aes({{column}}, fill = {{fill}}),
position = position,
alpha= 0.75)
}
#function to generate bar plot
plot_bar <- function(column, fill = NULL, position = "identity"){
ggplot(AIdata_clean, ) +
geom_bar(aes({{column}}, fill = {{fill}}),
position = position,
alpha = 0.75)
}
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count") +
scale_fill_manual(values = c("#670011", "#001100", "#000011"))
plot_bar(`AI (number)`, Gender) +
facet_wrap(~Gender)
plot_histogram(`Burden of symptoms`, Gender) +
facet_wrap(~Gender)
ggplot(AIdata_clean, aes(x = Gender, y = `Burden of symptoms`, fill=Gender)) +
geom_boxplot(alpha = 0.5)
plot_histogram(`Burden of therapies`, Gender, "dodge") +
facet_wrap(~Gender)
plot_histogram(`EQ-Index score`, Gender) +
facet_wrap(~Gender)
plot_histogram(`EQ-VAS score`, Gender) +
facet_wrap(~Gender)
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count") +
scale_color_brewer(palette = "PuOr")
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count") +
scale_color_brewer(palette = "PuOr")
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count") +
scale_color_brewer(palette = "PuOr")
library(rlang, quietly = TRUE)
library(readr, quietly = TRUE)
library(readxl, quietly = TRUE)
library(dplyr, quietly = TRUE)
library(tidyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(RColorBrewer, quietly = TRUE)
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count") +
scale_color_brewer(palette = "PuOr")
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count") +
scale_fill_brewer(palette = "PuOr")
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count") +
scale_fill_brewer(palette = "BuPu")
plot_histogram(Age, Gender) +
facet_wrap(~Gender) +
labs(title = "Age Distribution by Gender", x = "Age", y = "Count") +
scale_fill_brewer(palette = "Accent")
